import sys
from itertools import cycle

_map = []  # the full map
guard_cur = ()  # the current pos of the guard
dirs_pos = {'s': (1, 0), 'n': (-1, 0), 'w': (0, -1),'e': (0, 1)}  # welke bewegingen gedaan moeten worden voor elke windricthing
dirs = cycle(['n', 'e', 's', 'w'])  # Wrapping iterator voor alle windrichtingen
dir_cur = dirs.__next__()
containing_loop = 0
loop_obstacles = []

# Posities van nieuwe obstakels
# test input
# [(6,3), (8,1), (8,3), (7,6), (7,7),  (9,7)]
# echte input
# [(45, 83), (48, 83), (49, 66), (49, 55), (34, 63), (34, 84), (42, 97), (51, 97), (53, 97), (57, 97), (71, 97), (75, 94), (75, 85), (75, 77), (75, 70), (75, 61), (75, 45), (60, 56), (60, 66), (60, 68), (60, 72), (64, 95), (79, 95), (94, 95), (110, 63), (77, 62), (44, 85), (44, 87), (44, 99), (53, 104), (55, 104), (57, 104), (65, 94), (65, 85), (65, 75), (65, 66), (65, 63), (65, 61), (59, 53), (33, 53), (33, 57), (33, 58), (33, 63), (33, 65), (33, 76), (33, 84), (33, 96), (33, 98), (35, 100), (42, 100), (51, 100), (53, 100), (55, 100), (57, 100), (67, 100), (72, 100), (75, 100), (79, 100), (87, 100), (105, 94), (105, 60), (105, 57), (105, 53), (105, 51), (105, 46), (104, 46), (99, 46), (93, 46), (74, 52), (74, 55), (74, 67), (74, 77), (74, 96), (74, 98), (76, 98), (79, 98), (84, 91), (84, 85), (84, 83), (84, 81), (84, 72), (84, 70), (84, 65), (83, 59), (58, 59), (43, 59), (29, 59), (29, 63), (29, 65), (29, 76), (29, 85), (29, 87), (29, 96), (29, 98), (36, 111), (42, 111), (51, 111), (53, 111), (55, 111), (57, 111), (61, 111), (71, 111), (73, 111), (75, 111), (85, 111), (88, 109), (88, 102), (88, 101), (88, 99), (88, 97), (88, 91), (88, 85), (88, 83), (88, 79), (88, 72), (88, 70), (88, 65), (88, 45), (88, 40), (88, 38), (88, 32), (88, 28), (88, 26), (86, 26), (84, 26), (75, 26), (73, 26), (67, 26), (59, 26), (41, 26), (33, 26), (28, 26), (28, 28), (31, 25), (30, 24), (28, 24), (18, 28), (18, 44), (18, 58), (18, 59), (18, 66), (18, 76), (30, 78), (35, 78), (36, 78), (45, 78), (48, 78), (50, 78), (53, 66), (53, 58), (53, 57), (53, 55), (53, 52), (53, 47), (53, 40), (53, 31), (53, 25), (53, 24), (53, 23), (50, 22), (41, 22), (33, 22), (30, 22), (28, 22), (27, 22), (17, 22), (13, 22), (13, 28), (13, 36), (13, 44), (13, 58), (13, 59), (13, 66), (14, 67), (30, 67), (32, 67), (35, 67), (36, 67), (39, 67), (48, 67), (50, 67), (52, 67), (55, 67), (57, 67), (66, 67), (67, 67), (74, 67), (76, 67), (83, 67), (85, 67), (85, 66), (85, 58), (85, 57), (85, 55), (85, 45), (85, 40), (85, 38), (85, 32), (85, 28), (85, 22), (85, 13), (85, 9), (84, 7), (62, 7), (59, 7), (50, 9), (50, 12), (50, 18), (50, 20), (50, 22), (50, 23), (50, 27), (50, 28), (50, 32), (50, 34), (50, 35), (50, 52), (52, 55), (53, 55), (54, 55), (57, 55), (58, 55), (62, 55), (66, 55), (74, 55), (76, 55), (77, 55), (83, 55), (85, 55), (86, 55), (86, 45), (86, 40), (86, 38), (86, 32), (86, 28), (86, 26), (86, 22), (85, 20), (84, 20), (75, 20), (73, 20), (63, 20), (59, 20), (55, 20), (53, 20), (49, 20), (47, 20), (46, 20), (46, 23), (46, 26), (46, 27), (46, 28), (46, 32), (46, 34), (46, 52), (46, 53), (46, 56), (46, 58), (46, 59), (46, 60), (46, 61), (46, 64), (46, 66), (46, 73), (46, 74), (46, 75), (46, 76), (46, 84), (48, 90), (50, 90), (51, 90), (53, 90), (57, 90), (66, 90), (67, 90), (71, 90), (72, 90), (76, 90), (85, 90), (86, 90), (87, 90), (96, 70), (96, 65), (96, 40), (96, 38), (96, 30), (93, 28), (85, 28), (75, 28), (73, 28), (67, 28), (59, 28), (50, 28), (48, 28), (47, 28), (46, 28), (44, 28), (43, 32), (43, 34), (45, 49), (48, 49), (52, 49), (54, 49), (57, 49), (58, 49), (59, 49), (62, 49), (74, 49), (76, 49), (83, 49), (87, 49), (90, 49), (93, 49), (93, 45), (93, 40), (93, 38), (93, 32), (93, 30), (93, 27), (93, 22), (93, 19), (93, 16), (84, 15), (78, 15), (75, 15), (73, 15), (63, 15), (59, 15), (59, 18), (67, 18), (69, 18), (84, 18), (86, 18), (87, 18), (91, 18), (96, 16), (96, 6), (91, 18), (91, 20), (91, 24), (91, 25), (91, 34), (91, 37), (91, 45), (91, 50), (91, 52), (93, 54), (97, 54), (109, 54), (111, 54), (112, 53), (112, 51), (112, 47), (112, 45), (112, 44), (112, 40), (112, 22), (112, 19), (109, 30), (110, 23), (110, 19), (110, 16), (90, 9), (85, 9), (84, 9), (78, 9), (75, 9), (73, 9), (71, 9), (67, 9), (65, 12), (65, 13), (65, 26), (65, 27), (65, 28), (65, 29), (65, 32), (65, 35), (65, 36), (70, 43), (73, 43), (77, 43), (83, 43), (87, 43), (90, 43), (95, 43), (97, 43), (109, 43), (111, 43), (113, 43), (118, 43), (118, 37), (112, 37), (100, 37), (96, 37), (94, 37), (90, 37), (88, 37), (86, 37), (84, 37), (80, 37), (78, 37), (77, 37), (75, 37), (73, 37), (67, 37), (64, 37), (62, 44), (62, 49), (62, 51), (62, 52), (62, 56), (62, 64), (62, 73), (62, 75), (62, 76), (62, 78), (66, 80), (67, 80), (71, 80), (72, 80), (76, 80), (80, 79), (80, 77), (80, 72), (80, 70), (80, 66), (80, 64), (80, 63), (80, 61), (80, 58), (80, 54), (80, 53), (80, 45), (80, 40), (80, 38), (80, 36), (80, 33), (80, 32), (80, 30), (80, 27), (80, 24), (80, 23), (80, 21), (80, 19), (80, 17), (78, 17), (75, 17), (73, 17), (71, 17), (67, 17), (64, 17), (58, 17), (56, 17), (55, 17), (53, 17), (49, 17), (47, 17), (45, 17), (43, 17), (41, 17), (34, 17), (32, 17), (30, 17), (28, 17), (27, 17), (24, 17), (22, 18), (22, 28), (22, 32), (22, 34), (22, 36), (22, 44), (22, 50), (22, 57), (22, 58), (22, 59), (22, 61), (22, 62), (22, 63), (22, 66), (22, 68), (22, 72), (22, 74), (22, 76), (22, 79), (22, 84), (29, 87), (35, 87), (36, 87), (37, 87), (39, 87), (43, 87), (45, 87), (46, 87), (48, 87), (50, 87), (51, 87), (53, 87), (55, 87), (57, 87), (66, 87), (67, 87), (71, 87), (73, 87), (81, 87), (82, 87), (86, 87), (87, 87), (89, 85), (89, 83), (89, 79), (89, 72), (89, 70), (89, 65), (89, 64), (89, 63), (89, 61), (88, 61), (85, 61), (84, 61), (83, 61), (82, 61), (77, 61), (75, 61), (73, 61), (71, 61), (70, 61), (67, 61), (61, 61), (59, 61), (57, 61), (53, 61), (50, 61), (49, 61), (45, 61), (43, 61), (41, 65), (41, 66), (41, 73), (41, 74), (41, 75), (41, 76), (41, 82), (41, 85), (41, 91), (41, 96), (41, 98), (41, 101), (43, 101), (45, 101), (48, 101), (50, 101), (51, 101), (53, 101), (55, 101), (57, 101), (65, 101), (67, 101), (69, 99), (69, 85), (69, 83), (69, 81), (69, 79), (69, 75), (69, 71), (69, 66), (67, 66), (62, 66), (60, 66), (58, 66), (56, 66), (50, 66), (49, 66), (48, 67), (48, 73), (48, 74), (48, 75), (48, 76), (48, 78), (48, 84), (48, 88), (48, 90), (48, 96), (48, 98), (48, 102), (50, 102), (51, 102), (53, 102), (55, 102), (57, 102), (67, 102), (71, 102), (73, 102), (75, 102), (79, 102), (81, 102), (82, 102), (84, 102), (88, 102), (89, 102), (90, 102), (91, 94), (91, 91), (91, 85), (89, 85), (83, 85), (82, 85), (81, 85), (77, 85), (75, 85), (73, 85), (69, 85), (66, 85), (62, 85), (56, 85), (54, 85), (53, 85), (51, 85), (49, 85), (47, 85), (45, 85), (43, 85), (41, 85), (37, 85), (35, 85), (33, 85), (29, 85), (26, 85), (24, 85), (21, 85), (19, 85), (17, 85), (16, 88), (16, 90), (16, 98), (16, 100), (16, 101), (16, 104), (16, 105), (18, 107), (20, 107), (22, 107), (27, 107), (28, 107), (30, 107), (36, 107), (37, 107), (42, 107), (43, 107), (51, 107), (53, 107), (55, 107), (57, 107), (58, 107), (59, 107), (71, 107), (73, 107), (75, 107), (77, 103), (77, 101), (77, 99), (77, 91), (77, 89), (77, 85), (77, 83), (77, 81), (77, 79), (77, 77), (77, 69), (77, 66), (77, 64), (77, 63), (77, 61), (77, 59), (77, 58), (77, 55), (77, 54), (77, 53), (77, 45), (77, 42), (77, 40), (77, 38), (77, 36), (77, 33), (77, 32), (75, 32), (73, 32), (71, 32), (68, 32), (64, 32), (59, 32), (57, 32), (56, 32), (55, 34), (55, 35), (55, 39), (55, 44), (55, 50), (55, 52), (55, 56), (55, 65), (55, 68), (57, 68), (58, 68), (59, 68), (60, 68), (62, 68), (64, 68), (67, 68), (71, 68), (73, 68), (74, 68), (79, 68), (86, 68), (92, 68), (93, 68), (94, 68), (97, 68), (98, 68), (103, 64), (103, 63), (103, 61), (103, 60), (103, 57), (103, 53), (103, 47), (103, 45), (103, 42), (103, 40), (103, 38), (103, 36), (103, 27), (103, 24), (103, 22), (103, 21), (103, 19), (103, 16), (100, 13), (95, 13), (90, 13), (88, 13), (86, 13), (85, 13), (83, 13), (82, 13), (80, 13), (78, 13), (75, 13), (73, 13), (71, 13), (67, 13), (65, 13), (64, 13), (59, 13), (56, 13), (55, 13), (53, 13), (52, 17), (52, 20), (52, 24), (52, 32), (52, 34), (52, 35), (52, 39), (52, 40), (52, 44), (52, 46), (52, 49), (52, 51), (52, 52), (52, 55), (52, 56), (54, 56), (55, 56), (57, 56), (58, 56), (59, 56), (60, 56), (62, 56), (67, 56), (72, 56), (73, 56), (76, 56), (77, 56), (78, 56), (79, 56), (80, 56), (81, 56), (84, 56), (86, 56), (87, 56), (90, 56), (92, 56), (93, 56), (97, 56), (98, 56), (101, 50), (98, 45), (96, 45), (95, 45), (94, 45), (90, 45), (88, 45), (85, 45), (84, 45), (82, 45), (80, 45), (77, 45), (72, 45), (71, 45), (69, 45), (67, 45), (64, 45), (61, 45), (59, 45), (57, 45), (54, 45), (51, 45), (49, 45), (47, 45), (45, 45), (42, 45), (40, 45), (39, 45), (38, 45), (37, 45), (36, 45), (35, 45), (33, 45), (29, 45), (28, 45), (21, 45), (17, 45), (12, 45), (9, 46), (9, 47), (9, 51), (9, 55), (9, 58), (9, 59), (9, 61), (9, 68), (9, 72), (9, 74), (9, 76), (9, 79), (9, 84), (9, 87), (9, 89), (9, 100), (9, 101), (9, 104), (9, 105), (9, 107), (9, 110), (11, 113), (18, 113), (27, 113), (28, 113), (34, 113), (36, 113), (42, 113), (45, 105), (45, 101), (45, 98), (45, 96), (45, 94), (45, 91), (45, 89), (45, 87), (45, 85), (45, 83), (45, 81), (45, 79), (45, 70), (45, 68), (45, 66), (40, 65), (37, 65), (32, 65), (30, 65), (29, 65), (26, 65), (21, 65), (19, 65), (17, 65), (15, 65), (12, 65), (12, 68), (12, 72), (12, 74), (12, 76), (12, 79), (12, 84), (12, 87), (12, 89), (22, 93), (24, 93), (27, 93), (30, 93), (35, 93), (36, 93), (37, 93), (42, 93), (43, 93), (46, 93), (47, 93), (49, 93), (50, 93), (51, 93), (53, 93), (55, 93), (57, 93), (58, 93), (64, 93), (66, 93), (67, 93), (71, 93), (73, 93), (79, 93), (81, 93), (82, 93), (86, 93), (87, 93), (90, 93), (93, 93), (97, 93), (97, 91), (95, 91), (92, 91), (88, 91), (84, 91), (82, 91), (81, 91), (79, 93), (79, 95), (79, 96), (79, 98), (79, 100), (79, 102), (79, 104), (79, 107), (79, 115), (80, 117), (82, 117), (87, 117), (89, 117), (90, 117), (98, 117), (101, 117), (109, 117), (112, 117), (113, 107), (113, 106), (113, 103), (104, 98), (99, 98), (99, 101), (99, 107), (99, 108), (99, 111), (99, 112), (99, 114), (108, 114), (112, 114), (119, 108), (119, 106), (119, 103), (119, 97), (119, 90), (119, 87), (119, 84), (119, 79), (119, 75), (112, 75), (104, 75), (95, 75), (78, 75), (72, 75), (69, 75), (67, 75), (66, 75), (62, 75), (61, 75), (59, 75), (57, 75), (48, 75), (47, 75), (40, 75), (38, 75), (32, 75), (30, 75), (28, 75), (26, 75), (21, 75), (19, 75), (17, 75), (15, 75), (11, 75), (8, 75), (6, 75), (4, 75), (3, 76), (3, 79), (3, 84), (3, 87), (3, 89), (3, 94), (3, 100), (3, 101), (3, 107), (3, 110), (3, 114), (9, 120), (18, 120), (28, 120), (34, 120), (36, 120), (42, 120), (51, 120), (55, 120), (57, 120), (61, 120), (61, 113), (61, 111), (61, 109), (61, 105), (61, 99), (61, 94), (61, 89), (61, 85), (61, 83), (61, 82), (61, 78), (59, 78), (59, 82), (59, 83), (59, 85), (59, 87), (59, 89), (59, 90), (59, 92), (59, 94), (59, 96), (59, 98), (59, 100), (59, 102), (59, 104), (59, 105), (59, 107), (59, 109), (59, 110), (59, 111), (59, 115), (59, 120), (61, 122), (63, 122), (72, 122), (81, 122), (82, 122), (84, 122), (90, 122), (96, 122), (98, 117), (98, 107), (95, 107), (90, 107), (87, 111), (87, 112), (87, 114), (87, 115), (87, 117), (87, 123), (89, 125), (94, 125), (96, 125), (99, 125), (109, 125), (112, 125), (121, 107), (121, 106), (121, 103), (121, 97), (121, 96), (121, 91), (121, 87), (121, 84), (115, 95), (117, 95), (118, 95), (124, 94), (124, 90), (124, 87), (124, 84), (124, 83), (122, 84), (122, 95), (122, 96), (122, 100), (123, 115), (126, 108), (126, 106), (126, 103), (126, 97), (126, 96), (126, 93), (126, 91), (126, 87), (126, 84), (126, 83), (126, 82), (126, 79), (120, 77), (115, 77), (112, 77), (108, 77), (104, 77), (95, 77), (82, 77), (77, 77), (75, 77), (74, 77), (73, 77), (71, 79), (71, 80), (71, 81), (71, 83), (71, 87), (71, 89), (71, 90), (71, 91), (71, 93), (71, 95), (71, 97), (71, 99), (71, 101), (71, 103), (71, 107), (71, 109), (71, 110), (71, 111), (71, 115), (71, 116), (71, 117), (72, 118), (74, 118), (78, 117), (78, 113), (78, 111), (74, 109), (71, 109), (70, 109), (68, 109), (66, 109), (64, 109), (58, 109), (56, 109), (52, 109), (50, 109), (44, 110), (44, 115), (44, 117), (44, 119), (44, 121), (44, 123), (44, 127), (45, 128), (51, 128), (55, 128), (57, 128), (50, 124), (44, 124), (43, 124), (39, 124), (21, 127)]

def init(guard_cur = ()):

    obstacles = []
    with open("input.txt") as f:

        for x, line in enumerate(f):
            _map.append([])
            for y, char in enumerate(line.strip()):
                if char == '^':
                    guard_cur = (x,y)
                if char == '#':
                    obstacles.append((x,y))
                _map[x].append((x,y,char))
    return obstacles, guard_cur

# print("guard_start: ", guard_cur)
# print("dir_start: ", dir_cur)
# print("obstacles: ", obstacles)
print()

def part1(obstacles, gurad_cur, guard_his = []):

    move_guard(obstacles, gurad_cur, guard_his)
    print(guard_his)
    return len(set((x,y) for x,y,z in guard_his)), obstacles, guard_his


def move_guard(obstacles, guard_cur, guard_his, dir_org = None):
    # print(obstacles)
    # print((6,3) in obstacles)
    global dir_cur
    keep_going = True
    while keep_going:
        new_pos = (guard_cur[0] + dirs_pos[dir_cur][0], guard_cur[1] + dirs_pos[dir_cur][1])

        #End if you reach the limit of the map
        if new_pos[0] < 0 or new_pos[0] >= len(_map) or new_pos[1] < 0 or new_pos[1] >= len(_map):
            # print("Out of bounds", file=sys.stderr)
            keep_going = False
            continue

        # Check of er een loop in zit (zou alleen in part 2 moeten gebeuren)
        if(contains_loop(new_pos, dir_cur, guard_his)):
            # print("in loop")
            # print(obstacles, " \n")
            global loop_obstacles
            loop_obstacles.append(obstacles[-1])
            return guard_his

        # move until you reach an obstacle
        if new_pos not in obstacles:
            guard_cur = new_pos
            guard_his.append((new_pos[0], new_pos[1], dir_cur))

        # if you reach an obstacle, turn and start moving again
        else:
            dir_cur = dirs.__next__()
            # print(f"dir_cur = {dir_cur}, pos = ({guard_cur[0]}, {guard_cur[1]})")

            move_guard(obstacles, guard_cur, guard_his)
            keep_going = False
    return guard_his



def part2(obstacles_copy, guard_his_copy, guard_cur):
    global containing_loop
    containing_loop = 0

    for pos in guard_his_copy:
        pos_temp = (pos[0], pos[1]) # zonder windrichting
        obstacles_copy.append(pos_temp)
        dirs = cycle(['n', 'e', 's', 'w'])  # Wrapping iterator voor alle windrichtingen
        global dir_cur
        dir_cur = dirs.__next__()
        guard_his_return = move_guard(obstacles_copy, guard_cur, [])

        # try:
        #     guard_his_return = move_guard(obstacles_copy, guard_cur, [])
        # except RecursionError as e:
        #     print(e)
        #     pass

        obstacles_copy.remove(pos_temp)
    # part2(obstacles_copy, guard_his_copy, guard_cur)


        # if contains_loop():
        #     containing_loop += 1
    print("part2: ", containing_loop)

def contains_loop(pos, dir, his):
    global containing_loop
    if (pos[0], pos[1], dir) in his:
        # print(f"({pos[0]}, {pos[1]}, {dir}) - {containing_loop}")
        containing_loop += 1
        return True
    return False
    pass


obstacles, guard_cur = init()
len_his, obst, his = part1(obstacles, guard_cur)
print("The answer to part 1 = ", len_his)
part2( obstacles, his, guard_cur)
print(loop_obstacles)



